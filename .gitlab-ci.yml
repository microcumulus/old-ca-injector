image: docker

stages:
  - build
  - docker
  - deploy
variables:
  GO111MODULE: "on"
  GOPATH: $CI_PROJECT_DIR/.temp

go:build:
  stage: build
  image: golang:alpine
  variables:
    CGO_ENABLED: '0'
  cache: 
    paths: [ '.temp' ]
    key: 'gocache'
  script:
    - go test ./... -coverprofile=coverage.out
    - go tool cover -func=coverage.out
    - go build -o app -ldflags "$(gometa ldflags)"
  coverage: '/total:\t*\(statements\)\t*\d+\.\d+%/'
  artifacts:
    paths:
      - app

build:
  stage: docker
  needs: ['go:build']
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - |
      /kaniko/executor \
        --context $CI_PROJECT_DIR \
        --dockerfile $CI_PROJECT_DIR/Dockerfile \
        --destination $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG \
        --image-name-with-digest-file sha.txt
    - |
      /kaniko/executor \
        --context $CI_PROJECT_DIR \
        --dockerfile $CI_PROJECT_DIR/Dockerfile \
        --destination $CI_REGISTRY_IMAGE:latest \
  artifacts:
    paths:
      - sha.txt

deploy:
  stage: deploy
  needs: ['build']
  image: 
    name: dtzar/helm-kubectl
  script:
    - kubectl -n admission apply -f k8s.yaml
    - kubectl -n admission set image deployment/cert-injector cert-injector=$(cat sha.txt)
